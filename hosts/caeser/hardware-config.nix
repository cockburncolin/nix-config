# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [(modulesPath + "/installer/scan/not-detected.nix")];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/0f318ffc-6378-4062-8fe4-f10abb18911c";
    fsType = "btrfs";
    options = ["subvol=rootfs"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/0f318ffc-6378-4062-8fe4-f10abb18911c";
    fsType = "btrfs";
    options = ["subvol=nix"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/0f318ffc-6378-4062-8fe4-f10abb18911c";
    fsType = "btrfs";
    options = ["subvol=home"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/337D-9CAB";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/mnt/nfs" = {
    device = "192.168.1.10:/volume2/Media";
    fsType = "nfs4";
  };

  # Kobo
  fileSystems."/mnt/ereader" = {
    device = "/dev/disk/by-uuid/63F3-BC98";
    fsType = "vfat";
    options = [
      "noauto"
      "uid=colin"
      "gid=users"
      "fmask=0022"
      "dmask=0022"
    ];
  };

  # Steamdeck SD Card
  fileSystems."/mnt/sd" = {
    device = "/dev/disk/by-uuid/c4a520e2-33f0-45df-b4b7-f279dc318f48";
    fsType = "ext4";
    options = ["noauto"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/a2911656-03a8-457c-91fa-2674d276fdea";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp12s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
